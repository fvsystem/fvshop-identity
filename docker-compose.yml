version: '3.8'

services:

  user-manager-rest:
    image: ghcr.io/fvsystem/fvshop-user-manager-express-sequelize:0.2.13
    depends_on:
      - postgres-user-manager
    environment:
      NODE_ENV: production
      WAIT_HOSTS: postgres-user-manager:5432
    env_file:
      - src/credential/infrastructure/userfacade/.env
    networks:
      - app_network
    ports:
      - '3001:3000'

  user-manager:
    image: ghcr.io/fvsystem/fvshop-user-manager-grpc-sequelize:0.2.13
    depends_on:
      - postgres-user-manager
    environment:
      NODE_ENV: production
      WAIT_HOSTS: postgres-user-manager:5432
    env_file:
      - src/credential/infrastructure/userfacade/.env
    networks:
      - app_network
    ports:
      - '50052:50051'

  credential-rest:
    build:
      context: .
      dockerfile: Dockerfile.express-sequelize
      secrets:
        - github_token
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      WAIT_HOSTS: postgres:5432
    env_file:
      - .env
    networks:
      - app_network
    ports:
      - '3000:3000'
  
  credential:
    build:
      context: .
      dockerfile: Dockerfile.grpc-sequelize
      secrets:
        - github_token
    depends_on:
      - postgres
    environment:
      NODE_ENV: production
      WAIT_HOSTS: postgres:5432
    env_file:
      - .env
    networks:
      - app_network
    ports:
      - '50051:50051'
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: fvshop
      POSTGRES_USER: ${DB_USERNAME}
    env_file:
      - .env
    volumes:
      - ./database/entrypoint.sh:/docker-entrypoint-initdb.d/10_postgis.sh
    networks:
      - app_network
    ports:
      - '5432:5432'
  postgres-user-manager:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: fvshop
      POSTGRES_USER: ${DB_USERNAME}
    env_file:
      - src/credential/infrastructure/userfacade/.env
    volumes:
      - ./src/credential/infrastructure/userfacade/entrypoint.sh:/docker-entrypoint-initdb.d/10_postgis.sh
    networks:
      - app_network
    ports:
      - '5433:5432'
networks:
  app_network:
    driver: bridge

secrets:
  github_token:
    file: $HOME/.git/token
